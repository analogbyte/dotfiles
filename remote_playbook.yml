# ansible-playbook remote_playbook.yml
- name: equip remote home directory with my stuff
  hosts: all
  remote_user: root
  vars:
    username: "{{ 'naegele' if ansible_fqdn.find('belwue') != -1  else 'danieln' }}"
    home_dir: "{{ '/home-selfnet/' if ansible_fqdn.find('selfnet') != -1 else '/home/' }}{{ username }}"
  tasks:
    # vim
    - name: (n)vim - create backup dir
      file: path={{ home_dir }}/.backup state=directory owner={{ username }}
    - name: (n)vim - create undo dir
      file: path={{ home_dir }}/.backup state=directory owner={{ username }}
    - name: vim - copy vimrc fallback
      copy: src={{ playbook_dir }}/vimrc dest={{ home_dir }}/.vimrc owner={{ username }}
    # - name: nvim - create nvim config dir
    #   file: path={{ home_dir }}/.config/nvim state=directory owner={{ username }}
    # - name: nvim - copy nvimrc
    #   copy: src={{ playbook_dir }}/nvimrc dest={{ home_dir }}/.config/nvim/init.vim owner={{ username }}

    # shell
    # - name: fish - create fish config dir
    #   file: path={{ home_dir }}/.config/fish state=directory owner={{ username }}
    # - name: fish - copy config.fish
    #   copy: src={{ playbook_dir }}/config.fish dest={{ home_dir }}/.config/fish/config.fish owner={{ username }}
    # - name: zsh - copy zshrc.local
    #   copy: src={{ playbook_dir }}/zshrc.local dest={{ home_dir }}/.zshrc.local owner={{ username }}

    # multiplexers
    - name: tmux - copy tmux.conf
      copy: src={{ playbook_dir }}/tmux.conf dest={{ home_dir }}/.tmux.conf owner={{ username }}
    # - name: screen - copy screenrc
    #   copy: src={{ playbook_dir }}/screenrc dest={{ home_dir }}/.screenrc owner={{ username }}

    # vcs
    - name: git - copy gitconfig
      copy: src={{ playbook_dir }}/gitconfig dest={{ home_dir }}/.gitconfig owner={{ username }}

- name: try to install some packages
  hosts: all
  remote_user: root
  tasks:
    - name: install packages I want to have
      apt: name={{ item }} state=installed
      with_items:
        - dstat
        - htop
        - vim-nox
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
